openapi: 3.0.0
info:
  title: Wheelancer API with Swagger
  version: '1.0'
  description: "This is a simple CRUD API application made with Express and documented with Swagger 
    <br><br><h1>AUTH PASS (üîë): admin
    <br><br><h1>SUPER_AUTH PASS (üîëü¶π‚Äç‚ôÇÔ∏è): superadmin for System API calls and Admin registration."
servers:
  - url: http://wheelancer.hopto.org:3013/
  

#---<<<<<<<<<<<<<<<<<<<<<<<<<<<USER>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
    Super-Authorization:          
      type: apiKey
      name: super_auth
      in: header
      description: 'Super Special key for creating couriers => superadmin'  
  schemas:
    User: 
           type: object
           required: 
               - username
               - email
               - name
               - password
           properties:
               user_id:
                   type: integer
               username:
                   type: string
               name:
                   type: string
               email:
                   type: string
               biography:
                   type: string
               password:
                   type: string
           example:
               username: Mahmut_03
               email: test@test.com
               name: Mahmut
               password: testtset

         
security:
    - bearerAuth: []

paths:
#---<<<<<<<<<<<<<<<<<<<<<<<<<<<System>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

  /system/inserttuples:
    post:
      security:
        - Super-Authorization: []
      tags:
        - "System"

      description: Insert example tuples.
      responses:
        '200':
          description: OK - Inserted
        '500':
          description: MYSQL ERROR.

  /system/truncatetables:
    delete:
      security:
        - Super-Authorization: []
      tags:
        - "System"

      description: Truncate tables.
      responses:
        '200':
          description: OK - Truncated.
        '500':
          description: MYSQL ERROR.

  /system/inserttables:
    post:
      security:
        - Super-Authorization: []
      tags:
        - "System"

      description: <h1>Creates tables (Do not use until fully implemented)üß∞.
      responses:
        '200':
          description: OK - Inserted.
        '500':
          description: MYSQL ERROR.


#---<<<<<<<<<<<<<<<<<<<<<<<<<<<USER>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

  /user/checktoken:
    post:
      tags:
        - "User-General"

      description: Only checks token for persistent login.
              
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error

  /user/login:
    post:
      tags:
        - "User-General"

      description: Performs login operation and give user JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  email:
                    type: string
                  password:
                    type: string
              example:
               email: Mahmut_03
               password: testtset
              
      responses:
        '200':
          description: OK - Successfully logged in.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  name:
                    type: string
                  surname:
                    type: string
                  birthday:
                    type: string
                  idnum:
                    type: string
                  balance:
                    type: integer
                  email:
                    type: string
                  password:
                    type: string
                  registration_date:
                    type: string
                  type:
                    type: integer
                  token:
                    type: string
        '401':
          description: Wrong credentials.

  /user/register:
    post:        
      tags:
        - "User-General"

      description: Registers the user. Super-Auth Key is required in order to register as Admin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                birthday:
                  type: string
                idnum:
                  type: string
                email:
                  type: string
                password:
                  type: string
                type:
                  type: integer
              example:
                name: John
                surname: asdasd
                birthday: "2022-05-01T20:41:21.457Z"
                idnum: "123131323"
                email: test@wheeasdasdasdlancer.com
                password: testtset
                type: 0
      responses:
        '200':
          description: OK - Successfully registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  surname:
                    type: string
                  birthday:
                    type: string
                  idnum:
                    type: string
                  email:
                    type: string
                  password:
                    type: string
                  type:
                    type: integer
                  token:
                    type: string
        '406':
          description: Not Acceptable - User with same username or email already exists.

  /user/sendverification:
    post:        
      tags:
        - "User-General"

      description: Send mail verificaiton for users.
      
      responses:
        '200':
          description: Mail sent, please check your mailbox.
        '409':
          description: User is already verified.
        '429':
          description: User requested verification code more than 5 times. Please try again in 10 minutes.
        '500':
          description: Could not send verification code.
          
  /user/checkverification:
    post:        
      tags:
        - "User-General"

      description: Checks requested verification code to verify user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: "6208"
          
      responses:
        '200':
          description: Successfully verified.
        '401':
          description: Please send a verification code.
        '403':
          description: Wrong verification code.
        '408':
          description: Verification code expired.
        '409':
          description: User is already verified.
        '429':
          description: Has made too many wrong entry please request a new code.
        '500':
          description: Interval Server Error

  /user/setbio:
    put:
      security:
        - bearerAuth: []
      tags:
        - "User-General"

      description: Sets biography of a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  uid:
                    type: integer
                    format: user_id
                    example: 1
                  bio:
                    type: string
                    format: biography
                    example: "My Biography"
      responses:
        '200':
          description: OK - Successfully updated.
        '401':
          description: Unauthorized - Wrong username or email.

  /user/setemail:
    put:
      security:
        - bearerAuth: []
      tags:
        - "User-General"

      description: Sets email of a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  uid:
                    type: integer
                    format: user_id
                    example: 1
                  email:
                    type: string
                    format: email
                    example: "new@mail.com"
      responses:
        '200':
          description: OK - Successfully updated.
        '401':
          description: Unauthorized - Wrong username or email.

  /user/addbalance:
    put:
      security:
        - bearerAuth: []
      tags:
        - "User-General"

      description: Adds a specific amount to user's wallet.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  uid:
                    type: integer
                    format: user_id
                    example: 1
                  amount:
                    type: integer
                    format: amount
                    example: 100
      responses:
        '200':
          description: OK - Successfull balance change.
        '401':
          description: Unauthorized - Wrong username or email.

  /user/setpassword:
    put:
      security:
        - bearerAuth: []
      tags:
        - "User-General"

      description: Sets password of a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  uid:
                    type: integer
                    format: user_id
                    example: 1
                  password:
                    type: string
                    format: password
                    example: "as5f4as5df132"
      responses:
        '200':
          description: OK - Successfully updated.
        '401':
          description: Unauthorized - Wrong username or email.

  /user/setname:
    put:
      security:
        - bearerAuth: []
      tags:
        - "User-General"

      description: Sets name of a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  uid:
                    type: integer
                    format: user_id
                    example: 1
                  name:
                    type: string
                    format: name
                    example: "Mr.Wonka"
      responses:
        '200':
          description: OK - Successfully updated.
        '401':
          description: Unauthorized - Wrong username or email.


  /user/setusername:
    put:
      security:
        - bearerAuth: []
      tags:
        - "User-General"

      description: Sets username of a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  uid:
                    type: integer
                    format: user_id
                    example: 1
                  username:
                    type: string
                    format: username
                    example: "usn_a23s"
      responses:
        '200':
          description: OK - Successfully updated.
        '401':
          description: Unauthorized - Wrong username or email.

#---<<<<<<<<<<<<<<<<<<<<<<<<<<<ADMIN>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

  /user/getunverifiedcouriers:
    get:
      security:
        - bearerAuth: []
      tags:
        - "User-Admin"

      description: Gets unverified Couriers
      parameters:
        - in: query
          name: uid
          schema:
            type: integer
          description: Id of user
          example: 1
      responses:
        '200':
          description: OK - Successfully listed.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    user_id:
                      type: integer
                    user_name:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    biography:
                      type: string   
        '401':
          description: Unauthorized - Token is expired or wrong.


  /user/getverifiedcouriers:
    get:
      security:
        - bearerAuth: []
      tags:
        - "User-Admin"

      description: Gets verified Couriers
      parameters:
        - in: query
          name: uid
          schema:
            type: integer
          description: Id of user
          example: 1
      responses:
        '200':
          description: OK - Successfully listed.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    user_id:
                      type: integer
                    user_name:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
                    biography:
                      type: string   
        '401':
          description: Unauthorized - Token is expired or wrong.

  /user/verifycourier:
    put:
      security:
        - bearerAuth: []
      tags:
        - "User-Admin"
      description: For verifying the courier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  uid:
                    type: integer
                    format: user_id
                    example: 15
                  courier_id:
                    type: integer
                    format: courier_id
                    example: 3
      responses:
        '200':
          description: OK - Successfully verified.
        '401':
          description: Unauthorized - Wrong username or email.

#---<<<<<<<<<<<<<<<<<<<<<<<<<<<COURIER>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

  /user/addvehicle:
    post:
      security:
        - bearerAuth: []
        
      tags:
        - "User-Courier"

      description: Add vehicle to courier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                brand:
                  type: string
                max_length:
                  type: number
                max_width:
                  type: number
                max_height:
                  type: number
                max_weight:
                  type: number
                horsepower:
                  type: integer
                registration_plate:
                  type: string
                type:
                  type: string
              example:
                model: Golf,
                brand: Volkswagen
                max_length: 120.000
                max_width: 90.000
                max_height: 80.000
                max_weight: 40.000
                horsepower: 120
                registration_plate: 06MS8967
                type: Sedan
                
      responses:
        '200':
          description: OK - Vehicle successfully added.
        '401':
          description: Unauthorized - User must be courier.
        '500':
          description: Internal Server Error
          
          
  /user/myvehicles:
    get:
      security:
        - bearerAuth: []
      tags:
        - "User-Courier"

      description: Returns courier's vehicles
      responses:
        '200':
          description: OK - Listed
          content:
            application/json:
              schema:
                type: array
                items:
                    properties:
                      vehicle_id:
                        type: integer
                      user_id:
                        type: integer
                      model:
                        type: string
                      brand:
                        type: string
                      max_length:
                        type: number
                      max_width:
                        type: number
                      max_height:
                        type: number
                      max_weight:
                        type: number
                      horsepower:
                        type: integer
                      registration_plate:
                        type: string
                      
        '500':
          description: Interval Server Error
          
  /user/adddocument:
    post:
      security:
        - bearerAuth: []
        
      tags:
        - "User-Courier"

      description: Adds document to the courier to be verified.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                document:
                  type: string
                  format: binary
              
      responses:
        '200':
          description: OK - Document added successfully.
        '402':
          description: Document could not be added.
        '500':
          description: Internal Server Error
          
  /user/mydocument:
    get:
      security:
        - bearerAuth: []
      tags:
        - "User-Courier"

      description: Gets document data for courier.
      responses:
        '200':
          description: OK
          content:
            image/png:
              schema: 
                type: string
                format: binary
        '404':
          description: Document could not be found.
        '405':
          description: Document file is missing in our system.
        '500':
          description: Internal Server Error

#---<<<<<<<<<<<<<<<<<<<<<<<<<<<TRANSPORT>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

  /transport/alltransports:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Transport"

      description: Listing All Transports
      responses:
        '200':
          description: OK - Listed
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    tid:
                      type: string
                    customer_id:
                      type: integer
                    courier_id:
                      type: integer
                    cargo_size:
                      type: integer
                    cargo_weight:
                      type: integer
                    creation_date:
                      type: string
                    departure_cords:
                      type: string
                    arrival_cords:
                      type: string
                      
        '401':
          description: Unauthorized - Token is expired or wrong.
          
  /transport/nearpackages:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Transport"

      description: Brings near packages to the courier.
      parameters:
        - in: query
          name: s_city
          schema:
            type: string
          description: Departure City
          example: Ankara
        - in: query
          name: curr_pos_long
          schema:
            type: number
          description: Longitude of the current courier position
          example: 126.574000
        - in: query
          name: curr_pos_lat
          schema:
            type: number
          description: Latitude of the current courier position
          example: 354.153500
        - in: query
          name: radius
          schema:
            type: number
          description: (In Meters)
          example: 5
      responses:
        '200':
          description: OK - Listed
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    pid:
                      type: integer
                    cid:
                      type: integer
                    transport_id:
                      type: integer
                    length:
                      type: number
                    width:
                      type: number
                    height:
                      type: number
                    weight:
                      type: number
                    type:
                      type: string
                    s_long:
                      type: number
                    s_lat:
                      type: number
                    d_long:
                      type: number
                    d_lat:
                      type: number
                    status:
                      type: string
                    receiver_fullname:
                      type: string
                    receiver_email:
                      type: string
                    estimated_delivery_date:
                      type: string
                    chat_channel_id:
                      type: string
                    s_city:
                      type: string
                    d_city:
                      type: string
                      
        '401':
          description: You do not have permission to perform this.

#---<<<<<<<<<<<<<<<<<<<<<<<<<<<CUSTOMER>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

  /transport/mytransports:
    get:
      security:
        - bearerAuth: []
      tags:
        - "User-Customer"
      description: Listing customer's transports
      parameters:
        - in: query
          name: uid
          schema:
            type: integer
          description: Id of user
          example: 1
      responses:
        '200':
          description: OK - Listed
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    tid:
                      type: string
                    customer_id:
                      type: integer
                    courier_id:
                      type: integer
                    cargo_size:
                      type: integer
                    cargo_weight:
                      type: integer
                    creation_date:
                      type: string
                    departure_cords:
                      type: string
                    arrival_cords:
                      type: string
                      
        '401':
          description: Unauthorized - Token is expired or wrong.
          
#---<<<<<<<<<<<<<<<<<<<<<<<<<<<Package>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  /package/customerpackages:
    get:
      security:
        - bearerAuth: []
        
      tags:
        - "Package"

      description: Gets customer's own packages return all of them
      
      responses:
        '200':
          description: OK - Successfully registered.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    pid:
                      type: integer
                    cid:
                      type: integer
                    transport_id:
                      type: integer
                    length:
                      type: number
                    width:
                      type: number
                    height:
                      type: number
                    weight:
                      type: number
                    type:
                      type: string
                    s_long:
                      type: number
                    s_lat:
                      type: number
                    d_long:
                      type: number
                    d_lat:
                      type: number
                    status:
                      type: string
                    receiver_email:
                      type: string
                    estimated_delivery_date:
                      type: string
                    chat_channel_id:
                      type: string
                    s_city:
                      type: string
                    d_city:
                      type: string
        '406':
          description: Not Acceptable - User with same username or email already exists.
        '500':
          description: Internal Server Error
          
  /package/customerpackage:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Package"

      description: Gets customer's own package
      
      parameters:
        - in: query
          name: package_id
          schema:
            type: integer
          description: Id of the package
          example: 1
      
      responses:
        '200':
          description: OK - Successfully registered.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pid:
                    type: integer
                  cid:
                    type: integer
                  transport_id:
                    type: integer
                  length:
                    type: number
                  width:
                    type: number
                  height:
                    type: number
                  weight:
                    type: number
                  type:
                    type: string
                  s_long:
                    type: number
                  s_lat:
                    type: number
                  d_long:
                    type: number
                  d_lat:
                    type: number
                  status:
                    type: string
                  receiver_email:
                    type: string
                  estimated_delivery_date:
                    type: string
                  chat_channel_id:
                    type: string
                  s_city:
                    type: string
                  d_city:
                    type: string
        '404':
          description: Package could not found.
        '500':
          description: Internal Server Error
          
    delete:
      security:
        - Super-Authorization: []
      tags:
        - "Package"

      description: Deletes customer's package to the system.
      parameters:
        - in: query
          name: package_id
          schema:
            type: integer
          description: Id of the package
          example: 1
      responses:
        '200':
          description: OK - Package successfully removed from system.
        '403':
          description: Package could not removed from system.
        '404':
          description: Package could not be found.
        '409':
          description: Package has an active transportation process you can not remove it from the system.
        '500':
          description: Internal Server Error
          
  /package/addcustomerpackage:
    post:
      security:
        - bearerAuth: []
        
      tags:
        - "Package"

      description: Add customer's package to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                length:
                  type: number
                width:
                  type: number
                height:
                  type: number
                weight:
                  type: number
                type:
                  type: string
                s_long:
                  type: number
                s_lat:
                  type: number
                d_long:
                  type: number
                d_lat:
                  type: number
                receiver_email:
                  type: string
                s_city:
                  type: string
                d_city:
                  type: string
                image_raw:
                  type: string
              example:
                length: 12.5
                width: 14.2
                height: 5.1
                weight: 12.4
                type: Flammable,Oxidizing
                s_long: -99.79118
                s_lat: 17.08936
                d_long: -91.79118
                d_lat: 19.08936
                receiver_email: ""
                s_city: ""
                d_city : ""
                image_raw: BASE64IMG
                
      responses:
        '200':
          description: OK - Package added successfully.
        '403':
          description: Forbidden - Package could not be added.
        '500':
          description: Internal Server Error
  
  /package/allpackageproofs:
    get:
      security:
        - bearerAuth: []
        
      tags:
        - "Package"

      description: This works for both customer and courier.
      
      parameters:
        - in: query
          name: package_id
          schema:
            type: integer
          description: Id of the package
          example: 1
      
      responses:
        '200':
          description: OK - Successfully registered.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    proof_id:
                      type: integer
                    pid:
                      type: integer
                    type:
                      type: string
                    image:
                      type: string
                    date:
                      type: string
        '500':
          description: Internal Server Error
          
          
  /package/packageproof:
    get:
      security:
        - bearerAuth: []
        
      tags:
        - "Package"

      description: Get Package Proof Data
      
      parameters:
        - in: query
          name: image_uuid
          schema:
            type: integer
          description: Id of the image
          example: 1
      
      responses:
        '200':
          description: OK - Successfully registered.
          content:
            image/png:
              schema: 
                type: string
                format: binary
        '404':
          description: Proof image could not found.
        '405':
          description: Image file is missing in our system.
        '500':
          description: Internal Server Error